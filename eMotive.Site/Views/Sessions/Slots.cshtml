@using eMotive.SCE.Common.Helpers
@using eMotive.Models.Objects.SignupsMod
@using Extensions

@model UserSlotView
@{
    ViewBag.Title = "Slots";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


@Html.HiddenFor(m => m.LoggedInUser);
@Html.Raw(Server.HtmlDecode((Model.HeaderText)))
<table class="table table-striped table-hover">
    <tbody>
        @foreach (var slot in Model.Signup.Slots)
        {
            <tr id="slot_class_@slot.id" class="@Html.Raw(Model.StatusStyle(slot.id))" >
                <td id="badges_@slot.id" style="width: 60px;">
                    @Html.Raw(Model.HomeViewRowBadge(slot.id))
                </td>
                <td>@slot.Description</td>
                <td id="slot_value_@slot.id">@slot.SlotsAvailableString</td>
                <td>
                    <button id="slot_button_@slot.id" onclick="@Html.Raw(Model.AssignStatusFunctionality(slot.id))" class="btn btn-@Html.Raw(Model.StatusStyle(slot.id))">@Model.SlotStatusName(slot.id)</button>
                </td>
            </tr>
        }
    </tbody>
</table>
@Html.ActionLink("Back To Home", "Index", "Home", null, new { @class = "btn btn-info btn-small" })
@Html.ActionLink("Back To Interview Dates", "SignUps", null, new { @class = "btn btn-info btn-small" })


@if (Model.Signup.SignedUp(Model.LoggedInUser))
{
    <div id="ClashModal" class="modal hide fade" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
        <div class="modal-header">
            <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
            <h3 id="myModalLabel">You have already signed up for an interview slot</h3>
        </div>
        <div class="modal-body">

            <p>Your interview is scheduled for <strong>Model.SignedUpSlotInformation.Date.ToString("dddd d MMMM yyyy")</strong> at <strong>Model.SignedUpSlotInformation.Description</strong>.</p>
            <br />
            <!--if (Model.SignupID != Model.SignedUpSlotInformation.SignupID)
            {
                <div style="text-align: center; margin-top: 10px;">Html.ActionLink("Show Me My Interview", "Slots", new { id = Model.SignedUpSlotInformation.SignupID }, new { class = "btn btn-info btn-small" })</div>
            }-->
        </div>
        <div class="modal-footer">
            <button class="btn" data-dismiss="modal" aria-hidden="true">Close</button>
        </div>
    </div>
}

@Html.Raw(Server.HtmlDecode((Model.FooterText)))

@section footer
{
    <script src="~/Scripts/jquery.signalR-2.1.1.min.js" type="text/javascript"></script>
    <script src="~/signalr/hubs" type="text/javascript"></script>
    <script type="text/javascript">


        // var pusher = new Pusher('16e704e82102cc97b901');

        var mmiHub = $.connection.MMIHub;


        $.connection.hub.start().done(function() {
            mmiHub.server.joinGroup("SignupConfirm");
            mmiHub.server.joinGroup("SlotSelection");
        });


        mmiHub.client.placesChanged = function(data) {
            alert("called!");
            var username = data.Username;
            var loggedInUser = $("#LoggedInUser").val();
            if (username != loggedInUser) {
                var slot = data.SlotId;
                var description = data.Description;
                var badges = data.Badges;
                var rowStatus = data.RowStatus;
                var buttonStatus = data.ButtonStatus;
                var buttonFunctionality = data.Functionality;
                var buttonText = data.ButtonText;


                //todo: need to know if closed to remove onclick? or if full, then bind the onclick for closed etc?
                if (username == loggedInUser) {

                    $("#badges_" + slot).html(badges);
                    $("#slot_class_" + slot).removeClass().addClass(rowStatus);
                    $("#slot_button_" + slot).removeClass().addClass(buttonStatus);
                    $("#slot_button_" + slot).removeAttr("onClick").attr("onClick", buttonFunctionality);
                    $("#slot_button_" + slot).html(buttonText);
                }

                $("#slot_value_" + slot).html(description);
            }
        };

        mmiHub.client.signupConfirm = function(data) {
            var username = data.Username;
            var loggedInUser = $("#LoggedInUser").val();
       //     if (username == loggedInUser) {
                var slot = data.SlotId;
                var description = data.Description;
                var badges = data.Badges;
                var rowStatus = data.RowStatus;
                var buttonStatus = data.ButtonStatus;
                var buttonFunctionality = data.Functionality;
                var buttonText = data.ButtonText;


                //todo: need to know if closed to remove onclick? or if full, then bind the onclick for closed etc?
                if (username == loggedInUser) {

                    $("#badges_" + slot).html(badges);
                    $("#slot_class_" + slot).removeClass().addClass(rowStatus);
                    $("#slot_button_" + slot).removeClass().addClass(buttonStatus);
                    $("#slot_button_" + slot).removeAttr("onClick").attr("onClick", buttonFunctionality);
                    $("#slot_button_" + slot).html(buttonText);
                }

                $("#slot_value_" + slot).html(description);
        //    }
        };

        function ShowClashModal() {
            $('#ClashModal').modal({
                show: true
            });

            return false;
        }

        function DoSignup(signupId, slotId, username) {

            var SlotSignup = new Object();
            SlotSignup.idSignup = signupId;
            SlotSignup.idSlot = slotId;
            SlotSignup.Username = username;

            $.ajax({
                type: "POST",
                dataType: "json",
                data: SlotSignup,
                url: siteRoot + "api/Sessions/Signup/Add",
                success: function(data) {
                    if (data.Success) {
                        //   window.location.reload(false);

                    } else {
                        Ajax.DisplayError(data.message, "Error");
                    }
                },
                error: function(request, status, error) {
                    Ajax.DisplayError(data.message, "Error");
                }
            });


        }

        function DoCancelSignup(signupId, slotId, username) {

            var SlotCancel = new Object();
            SlotCancel.idSignup = signupId;
            SlotCancel.idSlot = slotId;
            SlotCancel.Username = username;

            $.ajax({
                type: "Post",
                dataType: "json",
                data: SlotCancel,
                url: siteRoot + "api/Sessions/Signup/Remove",
                success: function(data) {
                    if (data.Success) {
                        //      window.location.reload(false);

                    } else {
                        Ajax.DisplayError(data.message, "Error");
                    }
                },
                error: function(request, status, error) {
                    Ajax.DisplayError(data.message, "Error");
                }
            });

        }
    </script>
}

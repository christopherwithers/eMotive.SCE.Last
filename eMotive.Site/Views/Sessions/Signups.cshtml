@using Extensions
@using eMotive.SCE.Common.Helpers
@using eMotive.Models.Objects.SignupsMod

@model UserSignupView
@{
    ViewBag.Title = "Signups";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Signups</h2>

@if (!Model.Signups.HasContent())
{
    <div>No signup's could be found.</div>
}
else
{
    <ul class="nav nav-tabs" id="GroupLists" style="font-size: 130%;">
        @foreach (var item in Model.GetSignupsByGroup())
        {

            <li><a href="#@item.Key.Replace(' ', '_')" data-toggle="tab">@item.Key Sessions (@item.Value.Count())</a></li>

        }
    </ul>
    <div class="tab-content">
        @foreach (var item in Model.GetSignupsByGroup())
        {
            <div class="tab-pane" id="@item.Key.Replace(' ', '_')">
                <div class="alert-info alert">
                    @Html.Raw(Server.HtmlDecode(Model.GetDescription(item.Key)))
                </div>
                <table class="table table-striped table-hover">
                    <tbody>
                        @foreach (var signup in item.Value)
                        {
                            <tr id="signup_class_@signup.Id" @Html.SetStatusStyle(signup.TotalSlotsAvailable, 0 /*signup.SlotsAvailable*/, signup.SignedUp(Model.LoggedInUser))>

                                <td id="badgelocation" style="width: 60px;">
                                    @if (signup.SignedUp(Model.LoggedInUser))
                                    {
                                        foreach (var type in Model.SignedInUserSlotTypes.Where(n => n.Item1 == signup.Id))
                                        {
                                            <span class="label label-success">@type.Item2</span>
                                        }
                                    }
                                    else
                                    {
                                        @Html.Raw("&nbsp")

                                    }
                                </td>
                                <td>@signup.Date.ToString("dddd d MMMM yyyy")</td>
                                <td id="signup_value_@signup.Id">@signup.SlotsAvailableString</td>
                                <td>
                                    <form action="@Url.Action("Slots", "Sessions", new {area = "", id = signup.Id})">
                                        <button id="signup_button_@signup.Id" @Html.SetStatusButton(signup.Slots.Select(n => n.PlacesAvailable).Count(), 0 /*signup.SlotsAvailable*/, signup.SignedUp(Model.LoggedInUser)) type="submit">View</button>
                                    </form>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>

            </div>
        }
            </div>
}

@section footer
{<script src="~/Scripts/jquery.signalR-2.1.1.min.js" type="text/javascript"></script>
<script src="~/signalr/hubs" type="text/javascript"></script>
<script type="text/javascript">


    // var pusher = new Pusher('16e704e82102cc97b901');

    var mmiHub = $.connection.MMIHub;


    $.connection.hub.start().done(function () {
        mmiHub.server.joinGroup("SignupSelection");
    });


    mmiHub.client.placesChanged = function (data) {
        var signup = data.SignUpId;
        var placesAvailable = data.PlacesRemaining;
        var status = data.Status;
        // alert(signupID);
        $("#signup_value_" + signup).text(placesAvailable);

        //if (signupID != undefined && signupID != signup) {
        //  $("#signup_class_" + signup).attr("class", SetStatusStyle(totalPlacesAvailable, placesAvailable, false));
        //  $("#signup_button_" + signup).attr("class", SetStatusStyle(totalPlacesAvailable, placesAvailable, true));
        //  }


    };

        var hash = document.location.hash;
        var prefix = "tab_";
        if (hash) {
            $('#GroupLists a[href=' + hash.replace(prefix, "") + ']').tab('show');
        } else {
            $('#GroupLists a:first').tab('show');
        }

        // Change hash for page-reload
        $('#GroupLists  a').on('shown', function (e) {
            window.location.hash = e.target.hash.replace("#", "#" + prefix);
        });
    </script>
}

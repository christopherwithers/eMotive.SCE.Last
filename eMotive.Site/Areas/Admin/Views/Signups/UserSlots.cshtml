@using eMotive.Models.Objects.Signups
@using eMotive.SCE.Common.Helpers

@model ThirdPartySignupSlots

@{
    ViewBag.Title = "UserSlots";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}

@section Crumbs
{
    <ul class="breadcrumb">
        <li>
            <a href="@Url.Action("Index", "Home", new { area = "Admin" })">Home</a> <span class="divider">/</span>
        </li>
        <li>
            <a href="@Url.Action("Index", "Users", new { area = "Admin" })">Users</a> <span class="divider">/</span>
        </li>
        <li class="active">
            Third Party Signup
        </li>
    </ul>
}
<div class="page-header">
    <h2>Third Party Signup for @Model.User.Forename @Model.User.Surname at @Model.Slots.SignupDescription</h2>
</div>

<table class="table table-striped table-hover">
    <tbody>
        @foreach (var slot in Model.Slots.SlotState)
        {
            <tr id="slot_class_@slot.ID" @Html.SetStatusStyle(slot.TotalPlacesAvailable, slot.PlacesAvailable(), slot.IsSignedUpToSlot())>
                <td id="badgelocation" style="width: 60px;">
                    @if (slot.IsSignedUpToSlot())
                    {
                        <span class="label label-success">Signed Up</span>
                        <span class="label label-success">@slot.SignupType</span>
                    }
                    else
                    {
                        @Html.Raw("&nbsp;");
                    }
                </td>
                <td>@slot.Description</td>
                <td id="slot_value_@slot.ID">@slot.PlacesAvailableString()</td>
                <td>
                    <!--Html.SetSlotStatusButton(slot.TotalPlacesAvailable, slot.PlacesAvailable, slot.Status == SlotStatus.AlreadySignedUp)-->
                    <button @Html.SetSlotStatusButton(slot.TotalPlacesAvailable, slot.PlacesAvailable(), slot.IsSignedUpToSlot()) @Html.AssignStatusFunctionality(slot.Status, Model.Slots.ID, slot.ID, Model.User.Username)>@Html.GetSignupStatusName(slot.Status)</button>
                </td>
            </tr>
        }
    </tbody>
</table>

@if (Model.Slots.HasSignedUp)
{
    <div id="ClashModal" class="modal hide fade" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
        <div class="modal-header">
            <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
            <h3 id="myModalLabel">You have already signed up for an interview slot</h3>
        </div>
        <div class="modal-body">

            <p>Your interview is scheduled for <strong>Model.SignedUpSlotInformation.Date.ToString("dddd d MMMM yyyy")</strong> at <strong>Model.SignedUpSlotInformation.Description</strong>.</p>
            <br />
            if (Model.SignupID != Model.SignedUpSlotInformation.SignupID)
            {
            <div style="text-align: center; margin-top: 10px;">Html.ActionLink("Show Me My Interview", "Slots", new { id = Model.SignedUpSlotInformation.SignupID }, new { class = "btn btn-info btn-small" })</div>
            }
        </div>
        <div class="modal-footer">
            <button class="btn" data-dismiss="modal" aria-hidden="true">Close</button>
        </div>
    </div>
}

@Html.ActionLink(string.Format("Back To Signups for {0} {1}", Model.User.Forename, Model.User.Surname), "UserSessions", new { username = @Model.User.Username}, new { @class = "btn btn-info" })

@section scripts
{
    <script src="http://js.pusher.com/1.12/pusher.min.js" type="text/javascript"></script>
    <script>

        var pusher = new Pusher('16e704e82102cc97b901');

        var channel = pusher.subscribe('SignupSelection');

        channel.bind('SlotChanged', function (data) {
            var slot = data.SlotId;
            var totalPlacesAvailable = data.TotalPlaces;
            var placesAvailable = data.PlacesAvailable;
            // alert(signupID);
            $("#slot_value_" + slot).text(placesAvailable + " places left");

            // if (signupID != undefined && signupID != signup) {
            $("#slot_class_" + slot).attr("class", SetStatusStyle(totalPlacesAvailable, placesAvailable, false));
            $("#slot_button_" + slot).attr("class", SetStatusStyle(totalPlacesAvailable, placesAvailable, true));
            //  }
        });

        function SetStatusStyle(totalplaces, remainingPlaces, button) {
            var placesLeft = (100 * remainingPlaces) / totalplaces;

            var warningLevel;
            if (placesLeft <= 10) {
                warningLevel = button ? "btn btn-danger" : "error";
            }
            else if (placesLeft <= 30) {
                warningLevel = button ? "btn btn-warning" : "warning";
            }
            else if (placesLeft <= 60) {
                warningLevel = button ? "btn btn-info" : "info";
            }
            else {
                return button ? 'btn' : "";
            }

            return warningLevel;
        }

        function ShowClashModal() {
            $('#ClashModal').modal({
                show: true
            });

            return false;
        }

        function DoSignup(signupId, slotId, username) {

            var params = new Object();
            params.idSignup = signupId;
            params.idSlot = slotId;
            params.username = username;
            
            Ajax.DoQuery(window.Routes.URL("SignupToSlotAdmin"), function (data) {
                if (data.success) {
                    window.location.reload(false);

                } else {
                    Ajax.DisplayError(data.message, "Error");
                }
            }, params);
        }

        function DoCancelSignup(signupId, slotId, username) {

            var params = new Object();
            params.idSignup = signupId;
            params.idSlot = slotId;
            params.username = username;
            
            Ajax.DoQuery(window.Routes.URL("CancelSignupAdmin"), function (data) {
                if (data.success) {
                    window.location.reload(false);

                } else {

                }
            }, params);

            return false;
        }
    </script>
}